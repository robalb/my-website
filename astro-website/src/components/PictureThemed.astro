---
export interface Props {
	alt: string;
	src: string;
  height?: number;
}
/**
 * This component allows you to integrate two pngs: ...-dark.png and ...-light.png
 * and two webp: ...-dark.webp and ...-light.webp
 * into a markdown file.
 * The images must be two pngs and two webp
 * the filename should start with the name of the destination file followed by a dash,
 * and end in -dark.png and -light.png respectively
 * for example, the hero images for the article how-to-make-pasta.md
 * could be how-to-make-pasta-hero-dark.png and how-to-make-pasta-hero-light.png
 * usage:
 * ---
 * setup: |
 *   import Picture from '../../components/PictureThemed.astro'
 * ---
 * <Picture src="filename-without-extension" alt="yolo swagz" />
 */

const { alt, src, height=null } = Astro.props;

//https://github.com/withastro/astro/issues/3373
const baseDark = (await import(`../assets/posts/${src}-dark.png`)).default
const baseLight = (await import(`../assets/posts/${src}-light.png`)).default
const webpDark = (await import(`../assets/posts/${src}-dark.webp`)).default
const webpLight = (await import(`../assets/posts/${src}-light.webp`)).default
try{
const x = (await import(`../assets/posts/${src}-lightx.webp`)).default
console.log(x)
}
catch{
console.log("nop")

}



//we assume that all images have the same ratio
let w = baseDark.width
let h = baseDark.height
//if a custom height is provided, that means that
// we want to scale the image to a fixed height.
//adjust the width to maintain the image proportions
if(height){
  w = Math.floor(w * height / h)
  h = height
}
//note: the image is styled in style.css, "article img"
---

<picture >
  <source srcset={webpDark.src}   type="image/webp" />
  <img src={baseDark.src} height={h} width={w}  class="dark" alt={alt} />
</picture>

<picture >
  <source srcset={webpLight.src}  type="image/webp" />
  <img src={baseLight.src} height={h} width={w}  class="light" alt={alt} />
</picture>
